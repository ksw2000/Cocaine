import:
    io

main:
    p *f32 ?                    ; float *p = NULL               in C    NOTE[0]
    new p                       ; p = malloc(sizeof(float))     in C
    *p = 9.2                    ; *p = 32                       in C

    io.echof "%f\n" *p          ; 9.2
    io.echof "%p\n" p           ; 0x0000000689 (just example)

    p2 *f32 ?
    init p2                     ; p2 = calloc(1, sizeof(float)) in C
                                ; p2 = new(float)               in Go
    io.echoln p2                ; 0

    ; SHORTHAND NOTE[1]
    p3 *i32 !                   ; int p3 = calloc(1, sizeof(int)) in c
                                ; var p3 *int = new(int)          in Go

end:
NOTE
0.  | 05 |p *f32 ?
    
    "?" here will assign a default value `nil` same as `NULL` in C or `nil` in Go

1.  | 11 |
    | 12 | p2 *f32 ?
    | 13 | init p2
    | 14 | 
    
    can simplify to => p2 *f32 !

------------------------------------------------------------------------------------
new v.s. init

new will allcoate a space but not initialize. like malloc() in C

init will not only allocate a space but also initialize zero. like calloc() in C
